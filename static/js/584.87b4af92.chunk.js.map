{"version":3,"file":"static/js/584.87b4af92.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/form/form.styled.js","components/form/form.js","components/Filter/FIlter.styled.js","components/Filter/Filter.js","pages/ContactPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsError = state => state.contacts.isError;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from 'styled-components'\n \nexport const Wrapper = styled.div`\n    display: flex;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0px auto;\n    padding: 0px 15px;\n    justify-content:center;\n`\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background-color: rgb(204, 204, 204);\n    border: 3px solid rgb(204, 204, 204);\n    border-radius: 5px;\n    margin-bottom: 10px;\n    gap: 20px;\n`;\nexport const ContactName = styled.p`\n    color: indigo;\n    font-size: 20px;\n    font-weight: bold;\n`;\n\nexport const ContactNumber = styled.p`\n    color: rgb(102, 102, 102);\n`;\nexport const DeleteBtn = styled.button`\n    background-color: indigo;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    cursor: pointer;\n`","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  DeleteBtn,\n} from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <ContactName>{name}:</ContactName>{' '}\n          <ContactNumber>{number}</ContactNumber>\n          <DeleteBtn onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteBtn>\n        </ContactItem>\n      ))}\n    </div>\n  );\n};","import styled from 'styled-components'\nimport { Field, Form, ErrorMessage } from \"formik\";\nexport const StyledForm = styled(Form)`\n    padding: 10px;\n    background-color: rgb(204, 204, 204);\n    border: 3px solid rgb(204, 204, 204);\n    border-radius: 5px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-top: 20px;\n    height: 400px;\n`\nexport const ContactLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nwidth: 300px;\ncolor: indigo;\nfont-size: 20px;\nfont-weight: bold;\n`\nexport const StyledInput = styled(Field)`\npadding: 10px;\n    border: 1px solid rgb(204, 204, 204);\n    border-radius: 4px;\n    background-color: rgb(238, 237, 240);\n`\n\nexport const ContactBtn = styled.button`\nbackground-color: indigo;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 10px;\n    cursor: pointer;\n`\nexport const ErrorForm = styled(ErrorMessage)`\n    color: red;\n    font-size: 14px;\n    margin-top: 4px;\n    font-weight: normal;\n`","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  ContactLabel,\n  StyledInput,\n  ErrorForm,\n  ContactBtn,\n} from './form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addNumber } from 'redux/operations';\n\nconst FormSchema = Yup.object().shape({\n   name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n     .required('Required'),\n   number: Yup.string()\n     .min(9, '9 digits required!')\n     .max(19, 'Less than 16 symbols!')\n      .matches(\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n     .required('Required'),\n\n });\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmitForm = (values, action) => {\n    const isInContacts = contacts.some(\n      ({ name, number }) =>\n        name.toLowerCase() === values.name.toLowerCase() ||\n        number === values.number\n    );\n\n    if (isInContacts) {\n      return alert(`${values.name} or ${values.number}is already in contacts.`);\n    }\n\n    dispatch(addNumber(values));\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmitForm}\n    >\n      <StyledForm>\n        <h1>Phonebook</h1>\n        <ContactLabel>\n          Name\n          <StyledInput type=\"text\" name=\"name\" />\n          <ErrorForm name=\"name\" component=\"div\" />\n        </ContactLabel>\n\n        <ContactLabel>\n          Number\n          <StyledInput type=\"tel\" name=\"number\" />\n          <ErrorForm name=\"number\" component=\"div\" />\n        </ContactLabel>\n\n        <ContactBtn type=\"submit\">Add Contact</ContactBtn>\n      </StyledForm>\n    </Formik>\n  );\n};","import styled from 'styled-components'\nexport const FilterWrapper = styled.div`\n    background-color: rgb(204, 204, 204);\n    border: 3px solid rgb(204, 204, 204);\n    border-radius: 5px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-top: 20px;\n    height: 300px;\n`;\n\nexport const FilterLabel = styled.label`\n    color: indigo;\n    font-size: 20px;\n    font-weight: bold;\n`;\n\nexport const FilterInput = styled.input`\npadding: 10px;\n    border: 1px solid rgb(204, 204, 204);\n    border-radius: 4px;\n    background-color: rgb(238, 237, 240);\n`","import { selectFilter } from 'redux/selectors';\nimport { FilterWrapper, FilterLabel, FilterInput } from './FIlter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/sliceFilter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contactsFilter = e => dispatch(filterContacts(e.target.value.trim()));\n\n  return (\n    <FilterWrapper>\n      <h2>Contacts</h2>\n      <FilterLabel>Find Contacts By Name</FilterLabel>\n      <FilterInput type=\"text\" value={filter} onChange={contactsFilter} />\n    </FilterWrapper>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/form/form';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { Wrapper } from 'components/ContactList/ContactList.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n          </Helmet>\n          <Wrapper>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && Loader}</div>\n              <ContactList />\n          </Wrapper>\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Wrapper","styled","ContactItem","ContactName","ContactNumber","DeleteBtn","ContactList","dispatch","useDispatch","filteredContacts","useSelector","map","id","number","onClick","deleteContact","StyledForm","Form","ContactLabel","StyledInput","Field","ContactBtn","ErrorForm","ErrorMessage","FormSchema","Yup","shape","min","max","matches","required","ContactForm","initialValues","validationSchema","onSubmit","values","action","some","alert","addNumber","resetForm","type","component","FilterWrapper","FilterLabel","FilterInput","Filter","value","onChange","e","filterContacts","target","trim","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}